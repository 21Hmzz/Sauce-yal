type Query {
  users: [User!]!
  user(id: Int!): User
  posts: [Post!]!
  post(id: Int!): Post
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
  createPost(title: String!, content: String!): Post!
  createComment(postId: Int!, content: String!): Comment!
  likePost(postId: Int!): Like!
}

type User {
  id: Int!
  email: String!
  password: String!
  name: String!
  posts: [Post!]!
  comments: [Comment!]!
  likes: [Like!]!
}

type Post {
  id: Int!
  title: String!
  content: String!
  author: User!
  comments: [Comment!]!
  likes: [Like!]!
}

type Comment {
  id: Int!
  content: String!
  author: User!
  post: Post!
}

type Like {
  id: Int!
  user: User!
  post: Post!
}

type AuthPayload {
  token: String
  user: User
}
